[{"content":"使用Hugo和GitHub Pages部署个人博客\r安装Hugo\r安装 Git 安装 Go 安装 Hugo 选择extended版 windows平台：解压后，在文件夹中新建 bin 文件夹，将 hugo.exe 文件放到 bin 下，然后将该文件的路径添加到环境变量 path 中。在命令行中输入 hugo version 检查是否安装成功\n官方安装文档 ：https://gohugo.io/categories/installation/\n创建Site\r在某个文件夹下（我选择的E盘）右键打开Git Bash，执行\n1 hugo new site blog 然后E盘中会生成一个 blog 文件夹，进入其中后进行后续操作\n安装主题 hugo-theme-stack\r将默认配置文件 hugo.toml 重命名为 hugo_backup.toml 右键打开 Git Bash 执行以下命令 1 2 3 4 git init #下载主题 git submodule add https://github.com/CaiJimmy/hugo-theme-stack/ themes/hugo-theme-stack 在 /themes/hugo-theme-stack 中找到 archetypes 文件夹，拷贝后替换 /blog 下的 archetypes 文件夹 在 /themes/hugo-theme-stack/exampleSite 中将 content 文件夹和 hugo.yaml 文件拷贝到 /blog 下 hugo.yaml 配置参考官方配置文档: https://stack.jimmycai.com/config/\n启动Hugo服务\r执行命令\n1 hugo server 启动服务后可在 http://localhost:1313/ 访问个人站点。按 Ctrl + C 停止 Hugo 服务器。\n新建文章\r执行命令\n1 hugo new post/test.md 可在 /content/post 下找到对应md文件，打开文件进行编辑，建议将文件默认草稿关闭 draft: false\n生成静态页面\r执行命令\n1 hugo 会在/public下生成的静态文件，后续将该文件夹部署到github\n远程部署\r在Github中创建仓库\r创建一个仓库，仓库的名字格式为 {username}.github.io ，将 {username} 替换为你的github用户名\n关联Github仓库\r进入 /public 右键打开Git Bash，执行以下命令 1 2 3 4 5 6 7 git init #添加当前目录下所有文件到暂存区 git add . #将暂存区内容添加到本地仓库，-m 用于备注提交信息 git commit -m \u0026#34;first commit\u0026#34; 复制创建的{username}.github.io仓库的SSH地址：Code -\u0026gt; SSH，执行命令 1 2 #添加远程仓库 origin 为别名 git remote add origin [ssh地址] 将本地库的文件推送到远程仓库的master分支，第一次需要加 -u 1 git push -u origin master 启动GitHub Pages\r进入Github对应仓库中，点击Settings -\u0026gt; Pages，设置 Branch 为 master 后点击 save 保存\n此时就可以通过https://{username}.github.io/访问站点了\n通过相同操作可以将 /blog 文件夹及其下层内容托管到Github的blog仓库\n自动部署\r将部署操作写为脚本 deploy.sh，放到 /blog 下，写完博客后可双击运行自动进行部署\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 #!/bin/bash echo -e \u0026#34;\\033[0;32mDeploying updates to GitHub...\\033[0m\u0026#34; # Build the project. hugo # if using a theme, replace with `hugo -t \u0026lt;YOURTHEME\u0026gt;` # Go To Public folder cd public # Add changes to git. git add . # Commit changes. msg=\u0026#34;rebuilding site `date`\u0026#34; if [ $# -eq 1 ] then msg=\u0026#34;$1\u0026#34; fi git commit -m \u0026#34;$msg\u0026#34; # Push source and build repos. git push origin master # Come Back up to the Project Root cd .. 遇到的问题及解决方法\r解决 Github port 443 : Timed out\n解决git-ssh: connect to host github.com port 22: Connection timed out\n参考\rHugo部署到Github\nHugo系列(1) - 简单搭建教程与远程部署\n利用Github Page和Github Action部署你的Hugo博客\n","date":"2024-05-10T22:27:40+08:00","permalink":"https://y1bel.github.io/p/hugo--github-pages-%E9%83%A8%E7%BD%B2%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/","title":"Hugo + GitHub Pages 部署个人博客"}]